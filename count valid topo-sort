#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int countAllToposorts(int n, vector<vector<int>>& adj) {
        vector<int> indegree(n, 0);
        for (int u = 0; u < n; ++u) {
            for (int v : adj[u]) {
                indegree[v]++;
            }
        }

        vector<bool> visited(n, false);
        int count = 0;
        backtrack(n, adj, indegree, visited, count);
        return count;
    }

    void backtrack(int n, vector<vector<int>>& adj, vector<int>& indegree,
                   vector<bool>& visited, int& count) {
        bool allUsed = true;

        for (int i = 0; i < n; ++i) {
            if (!visited[i] && indegree[i] == 0) {
                visited[i] = true;
                for (int neighbor : adj[i]) {
                    indegree[neighbor]--;
                }

                backtrack(n, adj, indegree, visited, count);

                // Backtrack
                visited[i] = false;
                for (int neighbor : adj[i]) {
                    indegree[neighbor]++;
                }

                allUsed = false;
            }
        }

        if (allUsed) count++;
    }
};
